% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mclassSummary.R
\name{mclassSummary}
\alias{mclassSummary}
\title{Classification error, logLoss, and Brier score performance
measures across resamples}
\usage{
mclassSummary(data, lev = NULL, model = NULL, ...)
}
\arguments{
\item{data}{a data frame with columns \code{obs} and \code{pred} for the 
observed and predicted outcomes, and \code{prob} for predicted probabilities 
for each class. 
See the \code{classProbs} argument to \code{\link[caret]{trainControl}}.}

\item{lev}{a character vector of factors levels for the response.}

\item{model}{a character string for the model name (as taken from the 
\code{method} argument of \code{\link[caret]{train}}.}

\item{\dots}{additional arguments to be passed to the low level functions.}
}
\value{
A vector containing the metrics.
}
\description{
Calculates classification error, logLoss, and Brier score
measures for evaluating a multi-class classifier output quality.  
This function can be used in \code{\link[caret]{train}()} function for 
selecting the hyperparameter(s) of a classifier. This can be achieved by
specifying the argument \code{metric} with \code{maximize = FALSE} in
\code{train()} function call, and \code{summaryFunction = mclassSummary}
with \code{classProbs = TRUE} in \code{\link[caret]{trainControl}}. 
See examples below.
}
\examples{
\dontrun{
data = mlbench::mlbench.waveform(300)
data = data.frame(Class = data$classes, data$x)
data$Class = paste0("Class", data$Class)
describe(data)

mod1 = train(Class ~ . , data = data,
             method = "rpart2",
             tuneGrid = expand.grid(maxdepth = 1:10),
             metric = "logLoss",
             maximize = FALSE,
             trControl = trainControl(method = "cv", number = 10,
                                      classProbs = TRUE,
                                      summaryFunction = mclassSummary,
                                      selectionFunction = "best") )
mod1
ggplot(mod1) +
  scale_x_continuous(breaks = mod1$results$maxdepth) +
  geom_errorbar(aes(ymin = with(mod1$results, logLoss - logLossSD/sqrt(10)),
                    ymax = with(mod1$results, logLoss + logLossSD/sqrt(10))),
                width = 0.3)
                
mod2 = train(Class ~ . , data = data,
             method = "rpart2",
             tuneGrid = expand.grid(maxdepth = 1:10),
             metric = "BrierScore",
             maximize = FALSE,
             trControl = trainControl(method = "cv", number = 10,
                                      classProbs = TRUE,
                                      summaryFunction = mclassSummary,
                                      selectionFunction = "best") )
mod2
ggplot(mod2) +
  scale_x_continuous(breaks = mod2$results$maxdepth) +
  geom_errorbar(aes(ymin = with(mod2$results, BrierScore - BrierScoreSD/sqrt(10)),
                    ymax = with(mod2$results, BrierScore + BrierScoreSD/sqrt(10))),
                width = 0.3)
}
}
\seealso{
\code{\link[caret]{twoClassSummary}}, \code{\link{fscoreSummary}}
}
